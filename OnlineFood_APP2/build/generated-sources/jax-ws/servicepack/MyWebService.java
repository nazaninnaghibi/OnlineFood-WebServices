
package servicepack;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.3.2
 * Generated source version: 2.2
 * 
 */
@WebService(name = "MyWebService", targetNamespace = "http://servicepack/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface MyWebService {


    /**
     * 
     * @param arg0
     * @return
     *     returns java.util.List<servicepack.OrderModel>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getOrder", targetNamespace = "http://servicepack/", className = "servicepack.GetOrder")
    @ResponseWrapper(localName = "getOrderResponse", targetNamespace = "http://servicepack/", className = "servicepack.GetOrderResponse")
    @Action(input = "http://servicepack/MyWebService/getOrderRequest", output = "http://servicepack/MyWebService/getOrderResponse")
    public List<OrderModel> getOrder(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addUser", targetNamespace = "http://servicepack/", className = "servicepack.AddUser")
    @ResponseWrapper(localName = "addUserResponse", targetNamespace = "http://servicepack/", className = "servicepack.AddUserResponse")
    @Action(input = "http://servicepack/MyWebService/addUserRequest", output = "http://servicepack/MyWebService/addUserResponse")
    public String addUser(
        @WebParam(name = "arg0", targetNamespace = "")
        CustomerModel arg0);

    /**
     * 
     */
    @WebMethod
    @RequestWrapper(localName = "getAllOrderReformed", targetNamespace = "http://servicepack/", className = "servicepack.GetAllOrderReformed")
    @ResponseWrapper(localName = "getAllOrderReformedResponse", targetNamespace = "http://servicepack/", className = "servicepack.GetAllOrderReformedResponse")
    @Action(input = "http://servicepack/MyWebService/getAllOrderReformedRequest", output = "http://servicepack/MyWebService/getAllOrderReformedResponse")
    public void getAllOrderReformed();

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "signin", targetNamespace = "http://servicepack/", className = "servicepack.Signin")
    @ResponseWrapper(localName = "signinResponse", targetNamespace = "http://servicepack/", className = "servicepack.SigninResponse")
    @Action(input = "http://servicepack/MyWebService/signinRequest", output = "http://servicepack/MyWebService/signinResponse")
    public String signin(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1);

    /**
     * 
     * @return
     *     returns java.util.List<servicepack.OrderModel>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAllOrders", targetNamespace = "http://servicepack/", className = "servicepack.GetAllOrders")
    @ResponseWrapper(localName = "getAllOrdersResponse", targetNamespace = "http://servicepack/", className = "servicepack.GetAllOrdersResponse")
    @Action(input = "http://servicepack/MyWebService/getAllOrdersRequest", output = "http://servicepack/MyWebService/getAllOrdersResponse")
    public List<OrderModel> getAllOrders();

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "setReceived", targetNamespace = "http://servicepack/", className = "servicepack.SetReceived")
    @ResponseWrapper(localName = "setReceivedResponse", targetNamespace = "http://servicepack/", className = "servicepack.SetReceivedResponse")
    @Action(input = "http://servicepack/MyWebService/setReceivedRequest", output = "http://servicepack/MyWebService/setReceivedResponse")
    public void setReceived(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns double
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getTotalPrice", targetNamespace = "http://servicepack/", className = "servicepack.GetTotalPrice")
    @ResponseWrapper(localName = "getTotalPriceResponse", targetNamespace = "http://servicepack/", className = "servicepack.GetTotalPriceResponse")
    @Action(input = "http://servicepack/MyWebService/getTotalPriceRequest", output = "http://servicepack/MyWebService/getTotalPriceResponse")
    public double getTotalPrice(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        int arg1);

    /**
     * 
     */
    @WebMethod
    @RequestWrapper(localName = "getOrderReformed", targetNamespace = "http://servicepack/", className = "servicepack.GetOrderReformed")
    @ResponseWrapper(localName = "getOrderReformedResponse", targetNamespace = "http://servicepack/", className = "servicepack.GetOrderReformedResponse")
    @Action(input = "http://servicepack/MyWebService/getOrderReformedRequest", output = "http://servicepack/MyWebService/getOrderReformedResponse")
    public void getOrderReformed();

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "setOrder", targetNamespace = "http://servicepack/", className = "servicepack.SetOrder")
    @ResponseWrapper(localName = "setOrderResponse", targetNamespace = "http://servicepack/", className = "servicepack.SetOrderResponse")
    @Action(input = "http://servicepack/MyWebService/setOrderRequest", output = "http://servicepack/MyWebService/setOrderResponse")
    public String setOrder(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1);

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "setOrderDetail", targetNamespace = "http://servicepack/", className = "servicepack.SetOrderDetail")
    @ResponseWrapper(localName = "setOrderDetailResponse", targetNamespace = "http://servicepack/", className = "servicepack.SetOrderDetailResponse")
    @Action(input = "http://servicepack/MyWebService/setOrderDetailRequest", output = "http://servicepack/MyWebService/setOrderDetailResponse")
    public void setOrderDetail(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        int arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        int arg2);

    /**
     * 
     * @return
     *     returns java.util.List<servicepack.FoodModel>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getFoodsHome", targetNamespace = "http://servicepack/", className = "servicepack.GetFoodsHome")
    @ResponseWrapper(localName = "getFoodsHomeResponse", targetNamespace = "http://servicepack/", className = "servicepack.GetFoodsHomeResponse")
    @Action(input = "http://servicepack/MyWebService/getFoodsHomeRequest", output = "http://servicepack/MyWebService/getFoodsHomeResponse")
    public List<FoodModel> getFoodsHome();

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "setSend", targetNamespace = "http://servicepack/", className = "servicepack.SetSend")
    @ResponseWrapper(localName = "setSendResponse", targetNamespace = "http://servicepack/", className = "servicepack.SetSendResponse")
    @Action(input = "http://servicepack/MyWebService/setSendRequest", output = "http://servicepack/MyWebService/setSendResponse")
    public void setSend(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "setAvaluable", targetNamespace = "http://servicepack/", className = "servicepack.SetAvaluable")
    @ResponseWrapper(localName = "setAvaluableResponse", targetNamespace = "http://servicepack/", className = "servicepack.SetAvaluableResponse")
    @Action(input = "http://servicepack/MyWebService/setAvaluableRequest", output = "http://servicepack/MyWebService/setAvaluableResponse")
    public String setAvaluable(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deleteFood", targetNamespace = "http://servicepack/", className = "servicepack.DeleteFood")
    @ResponseWrapper(localName = "deleteFoodResponse", targetNamespace = "http://servicepack/", className = "servicepack.DeleteFoodResponse")
    @Action(input = "http://servicepack/MyWebService/deleteFoodRequest", output = "http://servicepack/MyWebService/deleteFoodResponse")
    public String deleteFood(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addFood", targetNamespace = "http://servicepack/", className = "servicepack.AddFood")
    @ResponseWrapper(localName = "addFoodResponse", targetNamespace = "http://servicepack/", className = "servicepack.AddFoodResponse")
    @Action(input = "http://servicepack/MyWebService/addFoodRequest", output = "http://servicepack/MyWebService/addFoodResponse")
    public String addFood(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        int arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        String arg3);

}
